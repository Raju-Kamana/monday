{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.html","./src/app/bank/create-account/create-account.component.html","./src/app/bank/deposit/deposit.component.html","./src/app/bank/funds-transfer/funds-transfer.component.html","./src/app/bank/get-account/get-account.component.html","./src/app/bank/home/home.component.html","./src/app/bank/operations/operations.component.html","./src/app/bank/show-accounts/show-accounts.component.html","./src/app/bank/transaction-list/transaction-list.component.html","./src/app/bank/withdraw/withdraw.component.html","./src/app/app-routing.module.ts","./src/app/app.component.css","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/bank/bank.service.ts","./src/app/bank/create-account/create-account.component.css","./src/app/bank/create-account/create-account.component.ts","./src/app/bank/deposit/deposit.component.css","./src/app/bank/deposit/deposit.component.ts","./src/app/bank/funds-transfer/funds-transfer.component.css","./src/app/bank/funds-transfer/funds-transfer.component.ts","./src/app/bank/get-account/get-account.component.css","./src/app/bank/get-account/get-account.component.ts","./src/app/bank/home/home.component.css","./src/app/bank/home/home.component.ts","./src/app/bank/operations/operations.component.css","./src/app/bank/operations/operations.component.ts","./src/app/bank/show-accounts/show-accounts.component.css","./src/app/bank/show-accounts/show-accounts.component.ts","./src/app/bank/transaction-list/transaction-list.component.css","./src/app/bank/transaction-list/transaction-list.component.ts","./src/app/bank/withdraw/withdraw.component.css","./src/app/bank/withdraw/withdraw.component.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","module.exports = \"<body>\\n    <h1>Welcome to Book Store</h1>\\n    <div class=\\\"container\\\">\\n      <nav class=\\\"navbar\\\">\\n        <ul class=\\\"nav-navbar\\\">\\n            <li class=\\\"nav-item\\\">\\n                <a class=\\\"nav-link\\\" routerLink=\\\"/\\\">Home</a>\\n              </li>\\n          <li class=\\\"nav-item\\\">\\n            <a class=\\\"nav-link\\\" routerLink=\\\"/create\\\">Add Book</a>\\n          </li>\\n          <li class=\\\"nav-item\\\">\\n            <a class=\\\"nav-link\\\" routerLink=\\\"/show\\\">Show Books</a>\\n          </li>\\n          <!-- <li class=\\\"nav-item\\\">\\n            <a class=\\\"nav-link\\\" routerLink=\\\"/showTrans\\\">Show Book Transactions</a>\\n          </li>\\n          <li class=\\\"nav-item\\\">\\n            <a class=\\\"nav-link\\\" routerLink=\\\"/action\\\">Book Operations</a>\\n          </li> -->\\n          <li class=\\\"nav-item\\\">\\n            <a class=\\\"nav-link\\\" routerLink=\\\"/get\\\">search</a>\\n          </li>\\n        </ul>\\n      </nav>\\n      <router-outlet></router-outlet>\\n    </div>\\n    </body>\\n\"","module.exports = \"<div class=\\\"container\\\">\\n        <h1>Add Book </h1>\\n        <form #userForm='ngForm' (ngSubmit)=\\\"onSubmit(userForm.value)\\\">\\n            <div class=\\\"form-group\\\">\\n                <label>Book Name</label>\\n                <input type=\\\"text\\\" #name=\\\"ngModel\\\" [class.is-invalid]=\\\"name.invalid && name.touched\\\"\\n                class=\\\"form-control\\\" name=\\\"name\\\" required ngModel>\\n                <small class=\\\"text-danger\\\" [class.d-none]=\\\"name.valid || name.untouched\\\">Name is required</small>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n                    <label>Price</label>\\n                    <input type=\\\"number\\\" #initialbalance=\\\"ngModel\\\" [class.is-invalid]=\\\"initialbalance.invalid && initialbalance.touched\\\"\\n                    class=\\\"form-control\\\" name=\\\"initialbalance\\\" required ngModel>\\n                    <small class=\\\"text-danger\\\" [class.d-none]=\\\"initialbalance.valid || initialbalance.untouched\\\">Price is required</small>\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                    <label>Author</label>\\n                    <input type=\\\"text\\\"  #accType=\\\"ngModel\\\" [class.is-invalid]=\\\"accType.invalid && accType.touched\\\"\\n                    class=\\\"form-control\\\" name=\\\"accType\\\" required ngModel>\\n                    <small class=\\\"text-danger\\\" [class.d-none]=\\\"accType.valid || accType.untouched\\\">Type required</small>\\n                </div>\\n            <!-- <div class=\\\"form-group\\\">\\n                <label>ISBN</label>\\n                <input type=\\\"number\\\" #mobile=\\\"ngModel\\\" [class.is-invalid]=\\\"mobile.invalid && mobile.touched\\\"\\n                class=\\\"form-control\\\" name=\\\"mobile\\\" required ngModel>\\n                <small class=\\\"text-danger\\\" [class.d-none]=\\\"mobile.valid || mobile.untouched\\\">ISBN required</small>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n                <label>email</label>\\n                <input type=\\\"text\\\" #dno=\\\"ngModel\\\" [class.is-invalid]=\\\"dno.invalid && dno.touched\\\"\\n                 class=\\\"form-control\\\" name=\\\"dno\\\" required ngModel>\\n                 <small class=\\\"text-danger\\\" [class.d-none]=\\\"dno.valid || dno.untouched\\\">email required</small>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n                <label>Book Type</label>\\n                <input type=\\\"text\\\"  #city=\\\"ngModel\\\" [class.is-invalid]=\\\"city.invalid && city.touched\\\"\\n                class=\\\"form-control\\\" name=\\\"city\\\" required ngModel>\\n                <small class=\\\"text-danger\\\" [class.d-none]=\\\"city.valid || city.untouched\\\">Book Type required</small>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n                <label>Author Id</label>\\n                <input type=\\\"number\\\" #pincode=\\\"ngModel\\\" [class.is-invalid]=\\\"pincode.invalid && pincode.touched\\\"\\n                 class=\\\"form-control\\\" name=\\\"pincode\\\" required ngModel>\\n                 <small class=\\\"text-danger\\\" [class.d-none]=\\\"pincode.valid || pincode.untouched\\\">Author ID required</small>\\n            </div> -->\\n            <div class=\\\"form-group\\\">\\n                   <button class=\\\"btn btn-success\\\">Add Book</button>\\n                </div>\\n\\n        </form>\\n\\n    </div>\\n\"","module.exports = \"\\n  <form #userForm='ngForm' (ngSubmit)=\\\"deposit(userForm.value)\\\">\\n      <div class=\\\"form-group\\\">\\n            <label>Confirm Book Number </label>\\n            <input type=\\\"number\\\" class=\\\"form-control\\\" name=\\\"accno\\\" ngModel>\\n        </div>\\n    <div class=\\\"form-group\\\">\\n        <label>Enter Amount to be paid </label>\\n        <input type=\\\"number\\\" class=\\\"form-control\\\" name=\\\"amount\\\" ngModel>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n        <button class=\\\"btn btn-success\\\">Pay</button>\\n    </div>\\n  </form>\\n\\n\"","module.exports = \"\\n  <form #userForm='ngForm' (ngSubmit)=\\\"transfer(userForm.value)\\\">\\n        <div class=\\\"form-group\\\">\\n              <label>Enter Book Number 1 </label>\\n              <input type=\\\"number\\\" class=\\\"form-control\\\" name=\\\"accno1\\\" ngModel>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n                <label>Enter Book  Number 2</label>\\n                <input type=\\\"number\\\" class=\\\"form-control\\\" name=\\\"accno2\\\" ngModel>\\n            </div>\\n      <div class=\\\"form-group\\\">\\n          <label>Subscribe </label>\\n          <input type=\\\"number\\\" class=\\\"form-control\\\" name=\\\"amount\\\" ngModel>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n          <button class=\\\"btn btn-success\\\">Subscribe</button>\\n      </div>\\n\\n    </form>\\n\"","module.exports = \"<div class=\\\"container\\\">\\n        <h3>Book Store </h3>\\n        <div class=\\\"container\\\">\\n            <form #userForm='ngForm' (ngSubmit)=\\\"get(userForm.value)\\\">\\n                <div class=\\\"form-group\\\">\\n                    <label>Enter Book Number</label>\\n                    <input type=\\\"number\\\" class=\\\"form-control\\\" name=\\\"accno\\\" ngModel>\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                    <button class=\\\"btn btn-success\\\">Get BOOK</button>\\n                </div>\\n            </form>\\n            <table class=\\\"table\\\">\\n                <tr>\\n                    <th>BOOK ID</th>\\n                    <th>Book Name</th>\\n                    <th>Book Type</th>\\n                    <th>Price</th>\\n                    <!-- <th>Actions</th> -->\\n                </tr>\\n                <tr>\\n                    <td>{{account.accno}}</td>\\n                    <td>{{account.name}}</td>\\n                    <td>{{account.accType}}</td>\\n                    <td>{{account.initialbalance}}</td>\\n                    <!-- <td class=\\\"td1\\\">\\n                        <a [routerLink]=\\\"['/deposit']\\\">\\n                            <b>Deposit</b>\\n                        </a>\\n                    </td>&nbsp;&nbsp; -->\\n\\n\\n                </tr>\\n            </table>\\n        </div>\\n\\n    </div>\\n\"","module.exports = \"\\r\\n        <!-- <marquee><h3>Register with Online Book Store </h3></marquee> -->\\r\\n\"","module.exports = \"<a [routerLink]=\\\"['/deposit']\\\">\\n    <b class=\\\"bold\\\">Subscribe</b>\\n</a>&nbsp;&nbsp;\\n<a [routerLink]=\\\"['/withdraw']\\\">\\n    <b class=\\\"bold\\\">Block</b>\\n</a>\\n&nbsp;&nbsp;\\n<a [routerLink]=\\\"['/transfer']\\\">\\n    <b class=\\\"bold\\\">Unblock</b>\\n</a>\\n\"","module.exports = \"<div class=\\\"container\\\">\\n    <h1>List of Books</h1>\\n    <table class=\\\"table\\\" border=\\\"2\\\" >\\n        <tr>\\n            <th>Book number</th>\\n            <th>Book Name</th>\\n            <th>Book Type</th>\\n            <th>Price</th>\\n\\n        </tr>\\n        <tr *ngFor='let account of accounts'>\\n           <td>{{account.accno}}</td>\\n            <td>{{account.name}}</td>\\n            <td>{{account.accType}}</td>\\n            <td>{{account.initialbalance}}</td>\\n\\n        </tr>\\n    </table>\\n</div>\\n\"","module.exports = \"<form #userForm='ngForm' (ngSubmit)=\\\"getTrans(userForm.value)\\\">\\n        <div class=\\\"form-group\\\">\\n            <label>Enter Book Number</label>\\n            <input type=\\\"number\\\" class=\\\"form-control\\\" name=\\\"accno\\\" ngModel>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n                <button class=\\\"btn btn-success\\\">Get Book Transactions</button>\\n             </div>\\n        </form>\\n<div class=\\\"container\\\">\\n        <table class=\\\"table\\\" border=\\\"2\\\">\\n            <tr>\\n                <th>Trans_Id</th>\\n                <th>Amount</th>\\n                <th>Date</th>\\n                <th>Description</th>\\n                <th>Type</th>\\n                <th>Book ID</th>\\n\\n            </tr>\\n            <tr *ngFor='let trans of transactions'>\\n               <td>{{trans.trans_Id}}</td>\\n                <td>{{trans.amount}}</td>\\n                <td>{{trans.date1}}</td>\\n                <td>{{trans.description}}</td>\\n                <td>{{trans.type}}</td>\\n                <td>{{trans.account}}</td>\\n            </tr>\\n        </table>\\n    </div>\\n\"","module.exports = \"\\n  <form #userForm='ngForm' (ngSubmit)=\\\"withdraw(userForm.value)\\\">\\n        <div class=\\\"form-group\\\">\\n              <label>Enter Book Number </label>\\n              <input type=\\\"number\\\" class=\\\"form-control\\\" name=\\\"accno\\\" ngModel>\\n          </div>\\n      <div class=\\\"form-group\\\">\\n          <label>Enter Price </label>\\n          <input type=\\\"number\\\" class=\\\"form-control\\\" name=\\\"amount\\\" ngModel>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n          <button class=\\\"btn btn-success\\\">Unsubscribe</button>\\n      </div>\\n\\n    </form>\\n\\n\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { CreateAccountComponent } from './bank/create-account/create-account.component';\nimport { HomeComponent } from './bank/home/home.component';\nimport { ShowAccountsComponent } from './bank/show-accounts/show-accounts.component';\nimport { OperationsComponent } from './bank/operations/operations.component';\nimport { DepositComponent } from './bank/deposit/deposit.component';\nimport { TransactionListComponent } from './bank/transaction-list/transaction-list.component';\nimport { WithdrawComponent } from './bank/withdraw/withdraw.component';\nimport { FundsTransferComponent } from './bank/funds-transfer/funds-transfer.component';\nimport { GetAccountComponent } from './bank/get-account/get-account.component';\n\n\n\nconst routes: Routes = [\n  { path:\"create\",component:CreateAccountComponent},\n  { path:\"show\",component:ShowAccountsComponent},\n  { path:\"showTrans\",component:TransactionListComponent},\n  { path:\"action\",component:OperationsComponent},\n  { path:\"deposit\",component:DepositComponent},\n  { path:\"withdraw\",component:WithdrawComponent},\n  {path:\"get\",component:GetAccountComponent},\n  {path:\"transfer\",component:FundsTransferComponent},\n  {path:'',component:HomeComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"h1{\\r\\n    color: red;\\r\\n    text-align: center\\r\\n}\\r\\n.nav-link\\r\\n{\\r\\n    color: black;\\r\\n    -webkit-text-decoration-style: solid;\\r\\n            text-decoration-style: solid;\\r\\n}\\r\\n.nav-navbar\\r\\n{\\r\\ncolor: red;\\r\\nnav-index: auto\\r\\n\\r\\n}\\r\\n.nav-navbar{\\r\\n\\r\\n}\\r\\nbody{\\r\\n    background-color: grey\\r\\n}\\r\\n\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxVQUFVO0lBQ1Y7QUFDSjtBQUNBOztJQUVJLFlBQVk7SUFDWixvQ0FBNEI7WUFBNUIsNEJBQTRCO0FBQ2hDO0FBQ0E7O0FBRUEsVUFBVTtBQUNWOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtJQUNJO0FBQ0oiLCJmaWxlIjoic3JjL2FwcC9hcHAuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbImgxe1xyXG4gICAgY29sb3I6IHJlZDtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlclxyXG59XHJcbi5uYXYtbGlua1xyXG57XHJcbiAgICBjb2xvcjogYmxhY2s7XHJcbiAgICB0ZXh0LWRlY29yYXRpb24tc3R5bGU6IHNvbGlkO1xyXG59XHJcbi5uYXYtbmF2YmFyXHJcbntcclxuY29sb3I6IHJlZDtcclxubmF2LWluZGV4OiBhdXRvXHJcblxyXG59XHJcbi5uYXYtbmF2YmFye1xyXG5cclxufVxyXG5ib2R5e1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogZ3JleVxyXG59XHJcblxyXG4iXX0= */\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'SpringParallel';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms'\n\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { CreateAccountComponent } from './bank/create-account/create-account.component';\n\nimport { HomeComponent } from './bank/home/home.component';\nimport { ShowAccountsComponent } from './bank/show-accounts/show-accounts.component';\nimport { OperationsComponent } from './bank/operations/operations.component';\nimport { DepositComponent } from './bank/deposit/deposit.component';\nimport { TransactionListComponent } from './bank/transaction-list/transaction-list.component';\nimport { WithdrawComponent } from './bank/withdraw/withdraw.component';\nimport { FundsTransferComponent } from './bank/funds-transfer/funds-transfer.component';\nimport { GetAccountComponent } from './bank/get-account/get-account.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CreateAccountComponent,\n    HomeComponent,\n    ShowAccountsComponent,\n    OperationsComponent,\n    DepositComponent,\n    TransactionListComponent,\n    WithdrawComponent,\n    FundsTransferComponent,\n    GetAccountComponent\n\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { Transaction } from './Transaction';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport {Account} from './Account';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BankService {\n  accounts: Account[];\n  transactions: Transaction[];\n  account: Account;\n  constructor(private http: HttpClient) {\n\n  }\n  populateAccounts(): Observable<Account[]> {\n    return this.http.get<Account[]>(\"http://localhost:4002/accounts\");\n\n  }\n  getAccounts(): Account[]{\n    return this.accounts;\n  }\n  addAccount(account: Account) {\n    return this.http.post<Account>(\"http://localhost:4002/create\", account).toPromise().then(data => console.log(data));\n\n  }\n  getDetails(value): any {\n    return this.http.get(\"http://localhost:4002/get1/\" + value.accno);\n  }\n  deposit(value): any {\n   // console.log(value.accno,value.amount);\n\n    return this.http.get(\"http://localhost:4002/accounts/deposit/\"+value.accno+\"/\"+value.amount);\n  }\n  getTransactions(): any {\n    return this.http.get(\"http://localhost:4002/transactions\");\n  }\n  getTrans(value): any {\n   return this.http.get(\"http://localhost:4002/get/\"+value.accno);\n  }\n  withdraw(value): any {\n    return this.http.get(\"http://localhost:4002/accounts/withdraw/\"+value.accno+\"/\"+value.amount);\n  }\n  transfer(value): any {\n    return this.http.get(\"http://localhost:4002/accounts/transfer/\"+value.accno1+\"/\"+value.accno2+\"/\"+value.amount);\n  }\n}\n","module.exports = \".is-invalid{\\r\\n border-color: red;\\r\\n}\\r\\n.is-valid{\\r\\n    border-color: green\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYmFuay9jcmVhdGUtYWNjb3VudC9jcmVhdGUtYWNjb3VudC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0NBQ0MsaUJBQWlCO0FBQ2xCO0FBQ0E7SUFDSTtBQUNKIiwiZmlsZSI6InNyYy9hcHAvYmFuay9jcmVhdGUtYWNjb3VudC9jcmVhdGUtYWNjb3VudC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmlzLWludmFsaWR7XHJcbiBib3JkZXItY29sb3I6IHJlZDtcclxufVxyXG4uaXMtdmFsaWR7XHJcbiAgICBib3JkZXItY29sb3I6IGdyZWVuXHJcbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { BankService } from '../bank.service';\nimport { Router } from '@angular/router';\nimport { NgForm } from '@angular/forms';\nimport {Account} from '../Account';\n\n@Component({\n  selector: 'app-create-account',\n  templateUrl: './create-account.component.html',\n  styleUrls: ['./create-account.component.css']\n})\nexport class CreateAccountComponent implements OnInit {\n\n  constructor(private bankService:BankService,private router:Router) { }\n\n  ngOnInit() {\n  }\n  onSubmit(account:Account)\n  {\n    this.bankService.addAccount(account);\n    this.router.navigate(['/show'])\n  }\n}\n","module.exports = \"h1{\\r\\n    color: green\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYmFuay9kZXBvc2l0L2RlcG9zaXQuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJO0FBQ0oiLCJmaWxlIjoic3JjL2FwcC9iYW5rL2RlcG9zaXQvZGVwb3NpdC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiaDF7XHJcbiAgICBjb2xvcjogZ3JlZW5cclxufSJdfQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { BankService } from '../bank.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-deposit',\n  templateUrl: './deposit.component.html',\n  styleUrls: ['./deposit.component.css']\n})\nexport class DepositComponent implements OnInit {\n\naccount:Account;\n  constructor(private bankService:BankService,private router:Router) { }\n\n  ngOnInit() {\n  }\ndeposit(value)\n{\n \n  this.bankService.deposit(value).subscribe(data => {\nthis.account = data;\n  });\n  this.router.navigate([\"/show\"]);\n\n};\n}\n\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2JhbmsvZnVuZHMtdHJhbnNmZXIvZnVuZHMtdHJhbnNmZXIuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { BankService } from '../bank.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-funds-transfer',\n  templateUrl: './funds-transfer.component.html',\n  styleUrls: ['./funds-transfer.component.css']\n})\nexport class FundsTransferComponent implements OnInit {\n  accounts:Account[];\n  constructor(private bankService:BankService,private router:Router) { }\n  \n  ngOnInit() {\n  }\n  transfer(value)\n  {\n    this.bankService.transfer(value).subscribe(data=>{this.accounts=data});\n   \n   this.router.navigate([\"/show\"]);\n}\n}\n","module.exports = \"table{\\r\\n    border: 5mm;\\r\\n    border-color: grey;\\r\\n    background-color: honeydew;\\r\\n    border-bottom-color: springgreen;\\r\\n    border-inline-end-color: honeydew;\\r\\n    border-style: solid\\r\\n}\\r\\nh1{\\r\\n    color:slateblue\\r\\n}\\r\\nth{\\r\\n    color: tomato;\\r\\n    text-align: center\\r\\n}\\r\\ntd{\\r\\n    color: mediumblue;\\r\\n    text-align: center;\\r\\n    text-justify: auto\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYmFuay9nZXQtYWNjb3VudC9nZXQtYWNjb3VudC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksV0FBVztJQUNYLGtCQUFrQjtJQUNsQiwwQkFBMEI7SUFDMUIsZ0NBQWdDO0lBQ2hDLGlDQUFpQztJQUNqQztBQUNKO0FBQ0E7SUFDSTtBQUNKO0FBQ0E7SUFDSSxhQUFhO0lBQ2I7QUFDSjtBQUNBO0lBQ0ksaUJBQWlCO0lBQ2pCLGtCQUFrQjtJQUNsQjtBQUNKIiwiZmlsZSI6InNyYy9hcHAvYmFuay9nZXQtYWNjb3VudC9nZXQtYWNjb3VudC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsidGFibGV7XHJcbiAgICBib3JkZXI6IDVtbTtcclxuICAgIGJvcmRlci1jb2xvcjogZ3JleTtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IGhvbmV5ZGV3O1xyXG4gICAgYm9yZGVyLWJvdHRvbS1jb2xvcjogc3ByaW5nZ3JlZW47XHJcbiAgICBib3JkZXItaW5saW5lLWVuZC1jb2xvcjogaG9uZXlkZXc7XHJcbiAgICBib3JkZXItc3R5bGU6IHNvbGlkXHJcbn1cclxuaDF7XHJcbiAgICBjb2xvcjpzbGF0ZWJsdWVcclxufVxyXG50aHtcclxuICAgIGNvbG9yOiB0b21hdG87XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXJcclxufVxyXG50ZHtcclxuICAgIGNvbG9yOiBtZWRpdW1ibHVlO1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgdGV4dC1qdXN0aWZ5OiBhdXRvXHJcbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { BankService } from '../bank.service';\n\n\n@Component({\n  selector: 'app-get-account',\n  templateUrl: './get-account.component.html',\n  styleUrls: ['./get-account.component.css']\n})\nexport class GetAccountComponent implements OnInit {\naccount:Account;\n  constructor(private bankService:BankService) { }\n\n  ngOnInit() {\n  }\n  get(value) {\n  \n    this.bankService.getDetails(value).subscribe(data => {\n      this.account = data;\n    });\n    console.log(this.account);\n  }\n}\n","module.exports = \"h3\\r\\n{\\r\\n    color: red\\r\\n}\\r\\nbody{\\r\\n    color: ivory\\r\\n}\\r\\n\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYmFuay9ob21lL2hvbWUuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7SUFFSTtBQUNKO0FBQ0E7SUFDSTtBQUNKIiwiZmlsZSI6InNyYy9hcHAvYmFuay9ob21lL2hvbWUuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbImgzXHJcbntcclxuICAgIGNvbG9yOiByZWRcclxufVxyXG5ib2R5e1xyXG4gICAgY29sb3I6IGl2b3J5XHJcbn1cclxuXHJcbiJdfQ== */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"h3{\\r\\n    color: red;\\r\\n    text-align: center;\\r\\n}\\r\\n.bold{\\r\\n    color: blue\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYmFuay9vcGVyYXRpb25zL29wZXJhdGlvbnMuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFVBQVU7SUFDVixrQkFBa0I7QUFDdEI7QUFDQTtJQUNJO0FBQ0oiLCJmaWxlIjoic3JjL2FwcC9iYW5rL29wZXJhdGlvbnMvb3BlcmF0aW9ucy5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiaDN7XHJcbiAgICBjb2xvcjogcmVkO1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG59XHJcbi5ib2xke1xyXG4gICAgY29sb3I6IGJsdWVcclxufSJdfQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { BankService } from '../bank.service';\n\n\n@Component({\n  selector: 'app-operations',\n  templateUrl: './operations.component.html',\n  styleUrls: ['./operations.component.css']\n})\nexport class OperationsComponent implements OnInit {\n  account: Account;\n  constructor(private bankService: BankService) { }\n\n  ngOnInit() {\n  }\n  get(value) {\n  \n    this.bankService.getDetails(value).subscribe(data => {\n      this.account = data;\n    });\n    console.log(this.account);\n  }\n}\n","module.exports = \"table{\\r\\n    border: 5mm;\\r\\n    border-color: grey;\\r\\n    background-color: honeydew;\\r\\n    border-bottom-color: springgreen;\\r\\n    border-inline-end-color: honeydew;\\r\\n    border-style: solid\\r\\n}\\r\\nh1{\\r\\n    color:slateblue\\r\\n}\\r\\nth{\\r\\n    color: tomato;\\r\\n    text-align: center\\r\\n}\\r\\ntd{\\r\\n    color: mediumblue;\\r\\n    text-align: center;\\r\\n    text-justify: auto\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYmFuay9zaG93LWFjY291bnRzL3Nob3ctYWNjb3VudHMuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFdBQVc7SUFDWCxrQkFBa0I7SUFDbEIsMEJBQTBCO0lBQzFCLGdDQUFnQztJQUNoQyxpQ0FBaUM7SUFDakM7QUFDSjtBQUNBO0lBQ0k7QUFDSjtBQUNBO0lBQ0ksYUFBYTtJQUNiO0FBQ0o7QUFDQTtJQUNJLGlCQUFpQjtJQUNqQixrQkFBa0I7SUFDbEI7QUFDSiIsImZpbGUiOiJzcmMvYXBwL2Jhbmsvc2hvdy1hY2NvdW50cy9zaG93LWFjY291bnRzLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJ0YWJsZXtcclxuICAgIGJvcmRlcjogNW1tO1xyXG4gICAgYm9yZGVyLWNvbG9yOiBncmV5O1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogaG9uZXlkZXc7XHJcbiAgICBib3JkZXItYm90dG9tLWNvbG9yOiBzcHJpbmdncmVlbjtcclxuICAgIGJvcmRlci1pbmxpbmUtZW5kLWNvbG9yOiBob25leWRldztcclxuICAgIGJvcmRlci1zdHlsZTogc29saWRcclxufVxyXG5oMXtcclxuICAgIGNvbG9yOnNsYXRlYmx1ZVxyXG59XHJcbnRoe1xyXG4gICAgY29sb3I6IHRvbWF0bztcclxuICAgIHRleHQtYWxpZ246IGNlbnRlclxyXG59XHJcbnRke1xyXG4gICAgY29sb3I6IG1lZGl1bWJsdWU7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICB0ZXh0LWp1c3RpZnk6IGF1dG9cclxufSJdfQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { BankService } from '../bank.service';\nimport {Account} from '../Account';\n\n@Component({\n  selector: 'app-show-accounts',\n  templateUrl: './show-accounts.component.html',\n  styleUrls: ['./show-accounts.component.css']\n})\nexport class ShowAccountsComponent implements OnInit {\naccounts:Account[];\n\n  constructor(private bankService:BankService) { \n    this.bankService.populateAccounts().subscribe(data => this.accounts = data, error => console.log(error));\n  }\n\n  ngOnInit() {\n    this.bankService.getAccounts();\n  }\n\n}\n","module.exports = \"table{\\r\\n    border: 5mm;\\r\\n    border-color: grey;\\r\\n    background-color: honeydew;\\r\\n    border-bottom-color: springgreen;\\r\\n    border-inline-end-color: honeydew;\\r\\n    border-style: solid\\r\\n}\\r\\nh1{\\r\\n    color:slateblue\\r\\n}\\r\\nth{\\r\\n    text-align: center;\\r\\n    color: tomato\\r\\n}\\r\\ntd{\\r\\n    color: mediumblue;\\r\\n    text-align: center;\\r\\n    text-justify: auto\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYmFuay90cmFuc2FjdGlvbi1saXN0L3RyYW5zYWN0aW9uLWxpc3QuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFdBQVc7SUFDWCxrQkFBa0I7SUFDbEIsMEJBQTBCO0lBQzFCLGdDQUFnQztJQUNoQyxpQ0FBaUM7SUFDakM7QUFDSjtBQUNBO0lBQ0k7QUFDSjtBQUNBO0lBQ0ksa0JBQWtCO0lBQ2xCO0FBQ0o7QUFDQTtJQUNJLGlCQUFpQjtJQUNqQixrQkFBa0I7SUFDbEI7QUFDSiIsImZpbGUiOiJzcmMvYXBwL2JhbmsvdHJhbnNhY3Rpb24tbGlzdC90cmFuc2FjdGlvbi1saXN0LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJ0YWJsZXtcclxuICAgIGJvcmRlcjogNW1tO1xyXG4gICAgYm9yZGVyLWNvbG9yOiBncmV5O1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogaG9uZXlkZXc7XHJcbiAgICBib3JkZXItYm90dG9tLWNvbG9yOiBzcHJpbmdncmVlbjtcclxuICAgIGJvcmRlci1pbmxpbmUtZW5kLWNvbG9yOiBob25leWRldztcclxuICAgIGJvcmRlci1zdHlsZTogc29saWRcclxufVxyXG5oMXtcclxuICAgIGNvbG9yOnNsYXRlYmx1ZVxyXG59XHJcbnRoe1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgY29sb3I6IHRvbWF0b1xyXG59XHJcbnRke1xyXG4gICAgY29sb3I6IG1lZGl1bWJsdWU7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICB0ZXh0LWp1c3RpZnk6IGF1dG9cclxufSJdfQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { BankService } from '../bank.service';\nimport { Transaction } from '../Transaction';\n\n@Component({\n  selector: 'app-transaction-list',\n  templateUrl: './transaction-list.component.html',\n  styleUrls: ['./transaction-list.component.css']\n})\nexport class TransactionListComponent implements OnInit {\ntransactions:Transaction[];\nconstructor(private bankService:BankService) { \n// this.bankService.getTransactions().subscribe(data => this.transactions = data, error => console.log(error));\n\n}\n\n  ngOnInit() {\n   \n  }\ngetTrans(value)\n{\n  this.bankService.getTrans(value).subscribe(data => this.transactions = data, error => console.log(error));\n}\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Jhbmsvd2l0aGRyYXcvd2l0aGRyYXcuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { BankService } from '../bank.service';\nimport { Router } from '@angular/router';\nimport {Account} from '../Account';\n@Component({\n  selector: 'app-withdraw',\n  templateUrl: './withdraw.component.html',\n  styleUrls: ['./withdraw.component.css']\n})\nexport class WithdrawComponent implements OnInit {\n\n  account: Account;\n  constructor(private bankService: BankService, private router: Router) { }\n\n  ngOnInit() {\n  }\n  withdraw(value) {\n    this.bankService.withdraw(value).subscribe(data => {\n      this.account = data;\n    });\n    console.log(this.account);\n   \n     this.router.navigate([\"/show\"]);\n  };\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}